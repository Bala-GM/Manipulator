1ST CODE
import shutil

# Specify the folder paths
folders_to_delete = ['D:/NX_BACKWORK/Feeder Setup_PROCESS/#Output/Upload',
                     'D:/NX_BACKWORK/Feeder Setup_PROCESS/#Output/Verified']

# Loop through each folder and delete it CODE
for folder_path in folders_to_delete:
    try:
        shutil.rmtree(folder_path)
        print(f"Folder '{folder_path}' deleted successfully.")
    except Exception as e:
        print(f"Error deleting folder '{folder_path}': {e}")


2ND CODE

import shutil

# Specify the folder paths
folders_to_delete = ['D:/NX_BACKWORK/Feeder Setup_PROCESS/#Output/Upload',
                     'D:/NX_BACKWORK/Feeder Setup_PROCESS/#Output/Verified']

# Function to handle errors during folder deletion
def on_rm_error(func, path, exc_info):
    """
    Error handler for shutil.rmtree function.
    """
    import stat
    # Handle read-only files
    if not os.access(path, os.W_OK):
        # Set file permissions to writable
        os.chmod(path, stat.S_IWUSR)
        # Retry the deletion
        func(path)
    else:
        raise

# Loop through each folder and delete it
for folder_path in folders_to_delete:
    try:
        shutil.rmtree(folder_path, onerror=on_rm_error)
        print(f"Folder '{folder_path}' deleted successfully.")
    except Exception as e:
        print(f"Error deleting folder '{folder_path}': {e}")


3RD CODE

import os
import psutil

# Function to find processes using a file
def find_processes_using_file(file_path):
    processes = []
    file_path = os.path.abspath(file_path)
    for proc in psutil.process_iter():
        try:
            for item in proc.open_files():
                if file_path == item.path:
                    processes.append(proc)
        except Exception as e:
            pass
    return processes

# Function to terminate processes
def terminate_processes(processes):
    for proc in processes:
        try:
            proc.terminate()
        except Exception as e:
            pass

# Specify the folder paths
folders_to_delete = ['D:/NX_BACKWORK/Feeder Setup_PROCESS/#Output/Upload',
                     'D:/NX_BACKWORK/Feeder Setup_PROCESS/#Output/Verified']

# Find and terminate processes using files within the folders
for folder_path in folders_to_delete:
    for root, dirs, files in os.walk(folder_path):
        for file in files:
            file_path = os.path.join(root, file)
            processes = find_processes_using_file(file_path)
            if processes:
                print(f"Processes using '{file_path}': {processes}")
                terminate_processes(processes)

# Attempt to delete the folders again
for folder_path in folders_to_delete:
    try:
        shutil.rmtree(folder_path)
        print(f"Folder '{folder_path}' deleted successfully.")
    except Exception as e:
        print(f"Error deleting folder '{folder_path}': {e}")

